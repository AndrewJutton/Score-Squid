@model ScoreSquid.Web.ViewModels.RegistrationViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


<script type="text/javascript">
    function getPropertyData(value) {
        var x = value.property["data"];
    }

    function testCapturedError() {
        var x = getPropertyDataCaptured(null);
    }

    function getPropertyDataCaptured(value) {
        try {
            var x = value.property["data"];
        } catch (err) {
            logError(err, arguments.callee.trace());
        }
    }
</script>
 
<ul>
<li><a href="javascript:getPropertyData(null);">execute getPropertyData(null) method.</a></li>
<li><a href="javascript:testCapturedError();">execute testCapturedError() method.</a></li>
</ul>




<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Player</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordConfirm)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.PasswordConfirm)
            @Html.ValidationMessageFor(model => model.PasswordConfirm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Forename)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Forename)
            @Html.ValidationMessageFor(model => model.Forename)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Surname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Surname)
            @Html.ValidationMessageFor(model => model.Surname)
        </div>

        <div class="editor-label">
            Which team do you support?
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SelectedTeamId, Model.Teams)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

